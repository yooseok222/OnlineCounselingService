<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="kr.or.kosa.visang.domain.client.repository.ClientMapper">

	<resultMap id="clientResultMap"
		type="kr.or.kosa.visang.domain.client.model.Client">
		<result column="client_id" property="clientId" />
		<result column="email" property="email" />
		<result column="phone_number" property="phoneNumber" />
		<result column="name" property="name" />
	</resultMap>

    <resultMap id="ClientResultMap" type="kr.or.kosa.visang.domain.client.model.Client">
        <id column="client_id" property="clientId" jdbcType="BIGINT"/>
        <result column="ssn" property="ssn" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="profile_image_url" property="profileImageUrl" jdbcType="VARCHAR"/>
        <result column="email_verified" property="emailVerified" jdbcType="BOOLEAN"/>
    </resultMap>

	<select id="findByEmail" parameterType="string"
		resultMap="ClientResultMap">
		SELECT client_id, ssn, name, email, password, phone_number, address, role, created_at, profile_image_url, email_verified
		FROM client
		WHERE email = #{email}
	</select>

	<select id="findById" parameterType="long"
		resultMap="ClientResultMap">
		SELECT client_id, ssn, name, email, password, phone_number, address, role, created_at, profile_image_url, email_verified
		FROM client
		WHERE client_id = #{clientId}
	</select>

    <insert id="save" parameterType="kr.or.kosa.visang.domain.client.model.Client">
        <selectKey keyProperty="clientId" resultType="long" order="BEFORE">
            SELECT client_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO client (client_id, ssn, name, email, password, phone_number, address, role, created_at, profile_image_url, email_verified)
        VALUES (#{clientId}, #{ssn}, #{name}, #{email}, #{password}, #{phoneNumber}, #{address, jdbcType=VARCHAR}, #{role}, #{createdAt},
        NVL(#{profileImageUrl, jdbcType=VARCHAR}, '/images/profile/default_profile.png'),
        #{emailVerified})
    </insert>

    <select id="isSsnExists" resultType="int">
        SELECT COUNT(*)
        FROM client
        WHERE REPLACE(ssn, '-', '') = REPLACE(#{ssn}, '-', '')
    </select>

    <select id="isEmailExists" resultType="int">
        SELECT COUNT(*)
        FROM client
        WHERE email = #{email}
    </select>

    <select id="isPhoneNumberExists" resultType="int">
        SELECT COUNT(*)
        FROM client
        WHERE REPLACE(phone_number, '-', '') = REPLACE(#{phoneNumber}, '-', '')
    </select>

    <update id="updateEmailVerificationStatus">
        UPDATE client
        SET email_verified = #{verified}
        WHERE email = #{email}
    </update>

    <update id="updatePassword">
        UPDATE client
        SET password = #{password}
        WHERE client_id = #{clientId}
    </update>

    <update id="updateProfileImageUrl">
        UPDATE client
        SET profile_image_url = #{profileImageUrl}
        WHERE client_id = #{clientId}
    </update>

    <update id="update" parameterType="kr.or.kosa.visang.domain.client.model.Client">
        UPDATE client
        SET name = #{name},
            phone_number = #{phoneNumber},
            address = #{address}
        WHERE client_id = #{clientId}
    </update>
</mapper>