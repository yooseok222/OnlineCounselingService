<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.kosa.visang.domain.agent.repository.AgentMapper">
    <resultMap id="AgentResultMap" type="kr.or.kosa.visang.domain.agent.model.Agent">
        <id column="agent_id" property="agentId" jdbcType="BIGINT"/>
        <result column="company_id" property="companyId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="profile_image_url" property="profileImageUrl" jdbcType="VARCHAR"/>
        <result column="email_verified" property="emailVerified" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="AgentUpdateMap" type="kr.or.kosa.visang.domain.agent.model.UpdateAgentDto">
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="profile_image_url" property="profileImageUrl" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectAllAgents" resultMap="AgentResultMap">
        SELECT agent_id, company_id, name, phone_number, state, email, address, role, created_at, profile_image_url, email_verified
        FROM agent
    </select>

    <select id="selectAgentById" resultMap="AgentResultMap">
        SELECT agent_id, company_id, name, phone_number, state, email, address, role, created_at, profile_image_url, email_verified
        FROM agent
        WHERE agent_id = #{id}
    </select>

    <select id="findByEmail" resultMap="AgentResultMap">
        SELECT agent_id, company_id, name, email, password, phone_number, address, role, state, created_at, profile_image_url, email_verified
        FROM agent
        WHERE email = #{email}
    </select>


    <select id="selectAgentByCondition" resultMap="AgentResultMap">
        SELECT agent_id, company_id, name, phone_number, state, email, address, role, created_at, profile_image_url, email_verified
        FROM agent
        <where>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
            <if test="state != null and state != ''">
                AND state = #{state}
            </if>
        </where>
    </select>
    
    <insert id="save" parameterType="kr.or.kosa.visang.domain.agent.model.Agent">
        <selectKey keyProperty="agentId" resultType="long" order="BEFORE">
            SELECT agent_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO agent (agent_id, company_id, name, email, password, phone_number, address, role, state, created_at, profile_image_url, email_verified)
        VALUES (#{agentId}, #{companyId}, #{name}, #{email}, #{password}, #{phoneNumber}, #{address, jdbcType=VARCHAR}, #{role}, #{state}, #{createdAt},
            NVL(#{profileImageUrl, jdbcType=VARCHAR}, '/images/profile/default_profile.png'),
            #{emailVerified})
    </insert>

    <update id="updateAgent" parameterType="kr.or.kosa.visang.domain.agent.model.UpdateAgentDto">
        UPDATE agent
        SET name = #{name},
            email = #{email},
            phone_number = #{phoneNumber},
            address = #{address, jdbcType=VARCHAR},
            state = #{state},
            profile_image_url = #{profileImageUrl, jdbcType=VARCHAR}
        WHERE agent_id = #{agentId}
    </update>

    <update id="updateAgentStatus">
        UPDATE agent
        SET state = #{state}
        WHERE agent_id = #{id}
    </update>

    <update id="updateAgentPassword">
        UPDATE agent
        SET password = #{password}
        WHERE agent_id = #{agentId}
    </update>
    
    <select id="isEmailExists" resultType="int">
        SELECT COUNT(*)
        FROM agent
        WHERE email = #{email}
    </select>
    
    <select id="isPhoneNumberExists" resultType="int">
        SELECT COUNT(*)
        FROM agent
        WHERE REPLACE(phone_number, '-', '') = REPLACE(#{phoneNumber}, '-', '')
    </select>
    
    <update id="updateEmailVerificationStatus">
        UPDATE agent
        SET email_verified = #{verified}
        WHERE email = #{email}
    </update>

    <select id="countContractByStatus" parameterType="long" resultType="map">
        SELECT
            status,
            COUNT(*) AS count
        FROM contract
        WHERE agent_id = #{agentId}
        GROUP BY status
    </select>

</mapper>