spring.config.import=optional:file:.env[.properties]
spring.application.name=visang

# 프로파일 선택 안내
# 오라클 DB 사용: --spring.profiles.active=oracle
# H2 DB 사용: --spring.profiles.active=h2
# 환경 변수 설정 예: SPRING_PROFILES_ACTIVE=oracle 또는 SPRING_PROFILES_ACTIVE=h2
spring.profiles.active=${SPRING_PROFILES_ACTIVE:oracle}

# Jasypt 설정
jasypt.encryptor.algorithm=PBEWithMD5AndDES
# 비밀번호는 환경 변수나 시스템 프로퍼티에서 읽음
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}

# MVC 뷰 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Thymeleaf 공통 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true

# 실제 이미지 저장 경로
file.upload-dir=${FILE_UPLOAD_PATH:./upload/profile}
file.upload-dir.pdf=${FILE_UPLOAD_PDF_PATH:./upload/pdf}
file.upload-dir.stamp=${FILE_UPLOAD_STAMP_PATH:./upload/stamp}
file.upload-dir.signed-pdf=${FILE_UPLOAD_SIGNED_PDF_PATH:./upload/signed-pdf}
file.upload-dir.chat=${FILE_UPLOAD_CHAT_PATH:./upload/chat}

# 녹음 파일 저장 경로
file.upload-dir.voice-record=${FILE_UPLOAD_VOICE_RECORD_PATH:./upload/voice_record}


# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 포트설정 ( 오라클과 충돌 예방)
server.port=${SERVER_PORT:8443}
http.port=${HTTP_PORT:8090}

#db 설정
spring.datasource.url=${DATABASE_URL:jdbc:oracle:thin:@localhost:1521:XE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# HikariCP 설정 (spring.datasource.hikari로 시작)
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:30000}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}

#Mail 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USER:#{T(kr.or.kosa.visang.common.util.JasyptUtil).getDecryptedValue('ENC(xtXeprUlQkm9wkgotBluILc1Xz95e6IxzbjGgZo7HAkULVajpHvu3rkxSafZlQx4)', '${JASYPT_ENCRYPTOR_PASSWORD:visangisawesome}')}}
spring.mail.password=${GMAIL_PASSWORD:#{T(kr.or.kosa.visang.common.util.JasyptUtil).getDecryptedValue('ENC(73ZGRmsV98W6AGuuOs9eXj5wBv7YRorMvHmY1OHThjCxrSNMNkm0wQ==)', '${JASYPT_ENCRYPTOR_PASSWORD:visangisawesome}')}}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Redis 설정
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
# spring.data.redis.password=yourRedisPassword// 비밀번호 설정된경우
spring.data.redis.timeout=${REDIS_TIMEOUT:3000}
# (선택) 커넥션 타임아웃

# Redis 초기화 설정
# true로 설정하면 서버 시작 시 Redis DB를 초기화합니다
spring.redis.flush-on-startup=false

# Mybatis 설정
#mapper 파일에서 resultType ="kr.or.kosa.model.User"
# kr.or.kosa.model 을 미리 만든다 -> resultType User 이렇게 사용 가능
mybatis.type-aliases-package=kr.or.kosa.visang.domain.*.model
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store=${STORE_PATH}
server.ssl.key-store-password=${KEY_STORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=visang-selfsigned

spring.messages.basename=message/adminSideBar
spring.messages.encoding=UTF-8
